services:
  backend:
    depends_on:
      - postgresdb
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresdb:5432/movieapp_db  # Use service name 'postgresdb' instead of 'localhost'
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - movieapp-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend

  postgresdb:
    image: postgres
    container_name: postgresdb
    ports:
      - "5432:5432"  # Expose Postgres on port 5433 (from container 5432 to host 5433)
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: movieapp_db
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Add a volume for data persistence
    networks:
      - movieapp-network  # Ensure the database is on the same network as the backend

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"   # 3001 cause I'm using local frontend on 3000
    depends_on:
      - prometheus
    networks:
      - observability

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - observability

networks:
  movieapp-network:
    driver: bridge
  observability:
    driver: bridge

volumes:
  postgres_data:


